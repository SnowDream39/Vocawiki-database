"""change producer song list

Revision ID: 627370c2ba04
Revises: a2a6dfca6635
Create Date: 2025-09-21 18:16:49.955336

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '627370c2ba04'
down_revision: Union[str, Sequence[str], None] = 'a2a6dfca6635'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('producer_song',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('producer_id', sa.Integer(), nullable=False),
    sa.Column('song_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False, comment='简介，用HTML格式写'),
    sa.ForeignKeyConstraint(['producer_id'], ['producer.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('producer_id', 'song_id', name='uix_producer_song')
    )
    op.create_index(op.f('ix_producer_song_producer_id'), 'producer_song', ['producer_id'], unique=False)
    op.drop_table('producer_song_whitelist')
    op.drop_table('producer_song_blacklist')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('producer_song_blacklist',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('producer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('song_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['producer_id'], ['producer.id'], name=op.f('producer_song_blacklist_producer_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('producer_song_blacklist_pkey')),
    sa.UniqueConstraint('producer_id', 'song_id', name=op.f('uq_blacklist'))
    )
    op.create_table('producer_song_whitelist',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('producer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('song_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['producer_id'], ['producer.id'], name=op.f('producer_song_whitelist_producer_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('producer_song_whitelist_pkey')),
    sa.UniqueConstraint('producer_id', 'song_id', name=op.f('uq_whitelist'))
    )
    op.drop_index(op.f('ix_producer_song_producer_id'), table_name='producer_song')
    op.drop_table('producer_song')
    # ### end Alembic commands ###
